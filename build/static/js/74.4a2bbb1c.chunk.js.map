{"version":3,"file":"static/js/74.4a2bbb1c.chunk.js","mappings":"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","sources":["components/Delivery/ShareLiveLocation/index.js","services/Delivery/gpslocation/actions.js","init-fcm.js","components/Delivery/DeliveryDesktop/index.js","components/Delivery/index.js","services/notification/actions.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { sendDeliveryGuyGpsLocation } from \"../../../services/Delivery/gpslocation/actions\";\r\n\r\nclass ShareLiveLocation extends Component {\r\n\tstate = {\r\n\t\tgpsAccessError: false,\r\n\t\tlat: null,\r\n\t\tlng: null,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst location = navigator && navigator.geolocation;\r\n\r\n\t\tif (location) {\r\n\t\t\tthis.refreshSetInterval = setInterval(() => {\r\n\t\t\t\tlocation.getCurrentPosition(\r\n\t\t\t\t\t(position) => {\r\n\t\t\t\t\t\tthis.__sendGpsLocation(position);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tif (navigator.userAgent === \"PickaAndroidWebViewUA\" && window.Android !== \"undefined\") {\r\n\t\t\t\t\t\t\tthis.setState({ gpsAccessError: false });\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconsole.log(\"Inside error\");\r\n\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\tthis.setState({ gpsAccessError: true });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tenableHighAccuracy: true,\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}, 15000);\r\n\t\t}\r\n\t}\r\n\r\n\t__sendGpsLocation = (position) => {\r\n\t\tthis.props.sendDeliveryGuyGpsLocation(\r\n\t\t\tthis.props.delivery_user.data.auth_token,\r\n\t\t\tthis.props.delivery_user.data.id,\r\n\t\t\tposition.coords.latitude,\r\n\t\t\tposition.coords.longitude,\r\n\t\t\tposition.coords.heading\r\n\t\t);\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.refreshSetInterval);\r\n\t\tconsole.log(\"Cleared API CALL\");\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"pt-50\">\r\n\t\t\t\t\t{this.state.gpsAccessError && (\r\n\t\t\t\t\t\t<div className=\"auth-error location-error\" style={{ bottom: \"5rem\" }}>\r\n\t\t\t\t\t\t\t<div className=\"error-shake\">{localStorage.getItem(\"allowLocationAccessMessage\")}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tdelivery_user: state.delivery_user.delivery_user,\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ sendDeliveryGuyGpsLocation }\r\n)(ShareLiveLocation);\r\n","import { SEND_DELIVERY_GUY_GPS_LOCATION, GET_DELIVERY_GUY_GPS_LOCATION } from \"./actionTypes\";\r\nimport { SEND_DELIVERY_GUY_GPS_LOCATION_URL, GET_DELIVERY_GUY_GPS_LOCATION_URL } from \"../../../configs\";\r\nimport Axios from \"axios\";\r\n\r\nexport const sendDeliveryGuyGpsLocation = (token, user_id, delivery_lat, delivery_long, heading) => dispatch => {\r\n    Axios.post(SEND_DELIVERY_GUY_GPS_LOCATION_URL, {\r\n        token: token,\r\n        user_id: user_id,\r\n        delivery_lat: delivery_lat,\r\n        delivery_long: delivery_long,\r\n        heading: heading\r\n    })\r\n        .then(response => {\r\n            const data = response.data;\r\n            return dispatch({ type: SEND_DELIVERY_GUY_GPS_LOCATION, payload: data });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const getDeliveryGuyGpsLocation = (token, order_id) => dispatch => {\r\n    Axios.post(GET_DELIVERY_GUY_GPS_LOCATION_URL, {\r\n        token: token,\r\n        order_id: order_id\r\n    })\r\n        .then(response => {\r\n            const data = response.data;\r\n            return dispatch({ type: GET_DELIVERY_GUY_GPS_LOCATION, payload: data });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n};\r\n","import \"firebase/messaging\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nlet messaging;\r\n\r\nif (firebase.messaging.isSupported()) {\r\n  if (\r\n    localStorage.getItem(\"firebasePublic\") !== \"null\" &&\r\n    localStorage.getItem(\"firebaseSenderId\") !== \"null\" &&\r\n    localStorage.getItem(\"firebasePublic\") !== null &&\r\n    localStorage.getItem(\"firebaseSenderId\") !== null\r\n  ) {\r\n    const initializedFirebaseApp = firebase.initializeApp({\r\n      // messagingSenderId: localStorage.getItem(\"firebaseSenderId\"),\r\n      apiKey: \"AIzaSyAblW7PktcZysn0p1qUMsxqK1S1ojSub2c\",\r\n      authDomain: \"spheric-alcove-356502.firebaseapp.com\",\r\n      projectId: \"spheric-alcove-356502\",\r\n      storageBucket: \"spheric-alcove-356502.appspot.com\",\r\n      messagingSenderId: \"215093171592\",\r\n      appId: \"1:215093171592:web:f375828539dfc479b7163d\",\r\n      measurementId: \"G-W11PFT24TM\",\r\n    });\r\n    messaging = initializedFirebaseApp.messaging();\r\n    messaging.usePublicVapidKey(localStorage.getItem(\"firebasePublic\"));\r\n  } else {\r\n    const initializedFirebaseApp = firebase.initializeApp({\r\n      // messagingSenderId: \"587656068333\",\r\n      apiKey: \"AIzaSyAblW7PktcZysn0p1qUMsxqK1S1ojSub2c\",\r\n      authDomain: \"spheric-alcove-356502.firebaseapp.com\",\r\n      projectId: \"spheric-alcove-356502\",\r\n      storageBucket: \"spheric-alcove-356502.appspot.com\",\r\n      messagingSenderId: \"215093171592\",\r\n      appId: \"1:215093171592:web:f375828539dfc479b7163d\",\r\n      measurementId: \"G-W11PFT24TM\",\r\n    });\r\n    messaging = initializedFirebaseApp.messaging();\r\n    messaging.usePublicVapidKey(\r\n      \"BH5L8XrGsNpki5uF1008FbZzgKKZN-NmhOwdWL5Lxh5r3nsgZ6N_Dged1IYXXCCJwpnrXzs52G_v3vM_naO0hxY\"\r\n    );\r\n  }\r\n}\r\nexport default messaging;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DeliveryDesktop extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"content-center text-center text-muted font-w600\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<i className=\"si si-screen-smartphone mb-2\" style={{ fontSize: \"4rem\", opacity: \"0.5\" }} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>{localStorage.getItem(\"deliveryUsePhoneToAccessMsg\")}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DeliveryDesktop;\r\n","import firebase from \"firebase\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport Meta from \"../helpers/meta\";\r\nimport Orders from \"./Orders\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport messaging from \"../../init-fcm\";\r\nimport { saveNotificationToken } from \"../../services/notification/actions\";\r\nimport ShareLiveLocation from \"./ShareLiveLocation\";\r\nimport DeliveryDesktop from \"./DeliveryDesktop\";\r\n\r\nclass Delivery extends Component {\r\n  async componentDidMount() {\r\n    if (document.querySelector(\"#mainManifest\")) {\r\n      document\r\n        .querySelector(\"#mainManifest\")\r\n        .setAttribute(\"href\", \"/delivery-manifest.json\");\r\n    }\r\n    if (document.getElementsByTagName(\"body\")) {\r\n      document.getElementsByTagName(\"body\")[0].classList.remove(\"bg-grey\");\r\n      document\r\n        .getElementsByTagName(\"body\")[0]\r\n        .classList.add(\"delivery-dark-bg\");\r\n    }\r\n\r\n    const { delivery_user } = this.props;\r\n\r\n    if (delivery_user.success) {\r\n      if (firebase.messaging.isSupported()) {\r\n        let handler = this.props.saveNotificationToken;\r\n        messaging\r\n          .requestPermission()\r\n          .then(async function() {\r\n            const push_token = await messaging.getToken();\r\n            handler(\r\n              push_token,\r\n              delivery_user.data.id,\r\n              delivery_user.data.auth_token\r\n            );\r\n          })\r\n          .catch(function(err) {\r\n            console.log(\"Unable to get permission to notify.\", err);\r\n          });\r\n        // navigator.serviceWorker.addEventListener(\"message\", message => console.log(message));\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (window.innerWidth > 768) {\r\n      return <DeliveryDesktop />;\r\n    }\r\n    const { delivery_user } = this.props;\r\n\r\n    if (!delivery_user.success) {\r\n      return <Redirect to={\"/login\"} />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <Meta\r\n          seotitle=\"Delivery Orders\"\r\n          seodescription={localStorage.getItem(\"seoMetaDescription\")}\r\n          ogtype=\"website\"\r\n          ogtitle={localStorage.getItem(\"seoOgTitle\")}\r\n          ogdescription={localStorage.getItem(\"seoOgDescription\")}\r\n          ogurl={window.location.href}\r\n          twittertitle={localStorage.getItem(\"seoTwitterTitle\")}\r\n          twitterdescription={localStorage.getItem(\"seoTwitterDescription\")}\r\n        />\r\n\r\n        <Orders />\r\n        {navigator.userAgent !== \"PickaAndroidWebViewUA\" && (\r\n          <ShareLiveLocation />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  delivery_user: state.delivery_user.delivery_user,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { saveNotificationToken }\r\n)(Delivery);\r\n","import { NOTIFICATION_TOKEN } from \"./actionTypes\";\r\nimport { NOTIFICATION_TOKEN_URL } from \"../../configs\";\r\nimport Axios from \"axios\";\r\n\r\nexport const saveNotificationToken = (push_token, user_id, token) => (dispatch) => {\r\n\tAxios.post(NOTIFICATION_TOKEN_URL, {\r\n\t\tpush_token: push_token,\r\n\t\tuser_id: user_id,\r\n\t\ttoken: token,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tif (response.data) {\r\n\t\t\t\tconsole.log(\"Notification Token Saved\");\r\n\t\t\t}\r\n\t\t\tconst token = response.data;\r\n\r\n\t\t\treturn dispatch({ type: NOTIFICATION_TOKEN, payload: token });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n"],"names":["ShareLiveLocation","state","gpsAccessError","lat","lng","__sendGpsLocation","position","props","sendDeliveryGuyGpsLocation","delivery_user","data","auth_token","id","coords","latitude","longitude","heading","location","navigator","geolocation","this","refreshSetInterval","setInterval","getCurrentPosition","error","userAgent","window","Android","setState","console","log","enableHighAccuracy","clearInterval","className","style","bottom","localStorage","getItem","Component","connect","token","user_id","delivery_lat","delivery_long","dispatch","Axios","SEND_DELIVERY_GUY_GPS_LOCATION_URL","then","response","type","SEND_DELIVERY_GUY_GPS_LOCATION","payload","catch","messaging","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","usePublicVapidKey","DeliveryDesktop","fontSize","opacity","Delivery","document","querySelector","setAttribute","getElementsByTagName","classList","remove","add","success","handler","saveNotificationToken","push_token","err","innerWidth","seotitle","seodescription","ogtype","ogtitle","ogdescription","ogurl","href","twittertitle","twitterdescription","Orders","Redirect","to","NOTIFICATION_TOKEN_URL","NOTIFICATION_TOKEN"],"sourceRoot":""}